<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-20T10:34:29.952Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/10/20/hello-world/"/>
    <id>http://example.com/2022/10/20/hello-world/</id>
    <published>2022-10-20T10:34:29.952Z</published>
    <updated>2022-10-20T10:34:29.952Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>在HEXO中添加新页面</title>
    <link href="http://example.com/2022/10/19/%E5%9C%A8HEXO%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%96%B0%E9%A1%B5%E9%9D%A2/"/>
    <id>http://example.com/2022/10/19/%E5%9C%A8HEXO%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%96%B0%E9%A1%B5%E9%9D%A2/</id>
    <published>2022-10-19T11:30:37.000Z</published>
    <updated>2022-10-19T11:30:37.564Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>在HEXO中添加新页面</title>
    <link href="http://example.com/2022/10/19/hexo/%E5%9C%A8HEXO%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%96%B0%E9%A1%B5%E9%9D%A2/"/>
    <id>http://example.com/2022/10/19/hexo/%E5%9C%A8HEXO%E4%B8%AD%E6%B7%BB%E5%8A%A0%E6%96%B0%E9%A1%B5%E9%9D%A2/</id>
    <published>2022-10-19T11:30:37.000Z</published>
    <updated>2022-10-19T11:32:46.545Z</updated>
    
    
    <summary type="html">手机端中看不到右侧菜单</summary>
    
    
    
    <category term="HEXO" scheme="http://example.com/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="http://example.com/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>自动化测试</title>
    <link href="http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/</id>
    <published>2022-10-18T05:36:04.000Z</published>
    <updated>2022-10-18T05:36:45.094Z</updated>
    
    
    <summary type="html">持续更新帖子 最近更新日期（2022年10月18日）</summary>
    
    
    
    <category term="软件测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    <category term="自动化测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    <category term="自动化测试" scheme="http://example.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>性能测试</title>
    <link href="http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</id>
    <published>2022-10-18T05:34:26.000Z</published>
    <updated>2022-10-19T11:29:01.193Z</updated>
    
    <content type="html"><![CDATA[<hr><p>2022年10月19日 更</p><p>[toc]</p><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><p>操作系统进行运算调度的最小单位</p><p>一条进程中可以有多条线程，共享进程中的全部系统资源</p><p>每个用户作为一个线程，减少资源浪费</p><h2 id="性能测试指标"><a href="#性能测试指标" class="headerlink" title="性能测试指标"></a>性能测试指标</h2><div class="markmap-container" style="height:undefined">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;并发用户数&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;并发用户数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;系统用户数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;在线用户数&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;响应时间&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;从客户端发起请求开始到客户端接收到从服务器返回的响应结束，这个过程所耗费的时间。&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;吞吐量&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;单位时间内系统处理用户的请求数&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;TPS(Transactions Per Second )&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;每秒钟系统能够处理事务或交易的数量，它是衡量系统处理能力的重要指标&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;点击率&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;每秒钟用户向WEB服务器提交的HTTP请求数。&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;资源利用率&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;对不同的系统资源的使用程度。如：CPU利用率内存利用率、磁盘利用率等&quot;}]}],&quot;p&quot;:{}}"></svg></div><h2 id="传输协议"><a href="#传输协议" class="headerlink" title="传输协议"></a>传输协议</h2><p>https &#x3D; http+ssl&#x2F;tls(一种加密手段)</p><p>HTTPS的默认端口为443</p><p>http为80</p><h2 id="HTTP-统一资原标识符-URL"><a href="#HTTP-统一资原标识符-URL" class="headerlink" title="HTTP-统一资原标识符(URL)"></a>HTTP-统一资原标识符(URL)</h2><ul><li><a href="http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name">http://www.aspxfans.com:8080/news/index.asp?boardID=5&amp;ID=24618&amp;page=1#name</a></li></ul><h3 id="协议部分"><a href="#协议部分" class="headerlink" title="协议部分"></a>协议部分</h3><p>代表网页便用的是HTTP协议。在Interneti中可以使用多种协议，如HTTP,FTP等等。<br>在”HTTP”后面的“I为分隔符</p><h3 id="域名部分"><a href="#域名部分" class="headerlink" title="域名部分"></a>域名部分</h3><p>“<a href="http://www.aspxfans.com&quot;.一个url中,也可以便使用ip地址作为域名使用/">www.aspxfans.com&quot;。一个URL中，也可以便使用IP地址作为域名使用</a></p><h3 id="端口部分"><a href="#端口部分" class="headerlink" title="端口部分"></a>端口部分</h3><p>跟在域名后面的是端口，域名和端口之间使用“：”作为分隔符。端口不是一个URL必须的部分，如果省略端口部分，将采用默认端口<code>80/tcp</code></p><h3 id="虚拟目录部分"><a href="#虚拟目录部分" class="headerlink" title="虚拟目录部分"></a>虚拟目录部分</h3><p>从域名后的第一个“”开始到最后一个“&#x2F;”为止，是虚拟目录部分。虚拟目录也不是一个URL必须的部分。本例中的虚拟目录是“&#x2F;news&#x2F;“</p><h3 id="文件名部分"><a href="#文件名部分" class="headerlink" title="文件名部分"></a>文件名部分</h3><p>从域名后的最后一个“&#x2F;”开始到”？”为止，是文件名部分，如果没有”？”，则是从域名后的最后一个“&#x2F;”开始到“#”为止，是文件部分，如果没有“？”和“#”，那么从域名后的最后一个“&#x2F;”开始到结束，都是文件名部分。本例中的文件名是”index.asp”。文件名部分也不是一个URL必须的部分，如果省略该部分，则使用默认的文件名</p><h3 id="锚部分"><a href="#锚部分" class="headerlink" title="锚部分"></a>锚部分</h3><p>从“#”开始到最后，都是锚部分。本例中的锚部分是“name”。锚部分也不是一个URL必须的部分（可以理解为定位）</p><h3 id="参数部分"><a href="#参数部分" class="headerlink" title="参数部分"></a>参数部分</h3><p>从“？”开始到“#”为止之间的部分为参数部分，又称搜索部分、查询部分。本例中的参数部分为<code>“boardID=5&amp;ID=24618&amp;page=1”</code>。参数可以允许有多个参数，参数与参数之间用“&amp;”作为分隔符。</p><h2 id="http请求数据包"><a href="#http请求数据包" class="headerlink" title="http请求数据包"></a>http请求数据包</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019100411030.png" alt="image-20221019100411030" title="">                </div>                <div class="image-caption">image-20221019100411030</div>            </figure><h3 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019100852406.png" alt="image-20221019100852406" title="">                </div>                <div class="image-caption">image-20221019100852406</div>            </figure><h3 id="响应数据包"><a href="#响应数据包" class="headerlink" title="响应数据包"></a>响应数据包</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019101127937.png" alt="image-20221019101127937" title="">                </div>                <div class="image-caption">image-20221019101127937</div>            </figure><h2 id="Jmeter常见术语"><a href="#Jmeter常见术语" class="headerlink" title="Jmeter常见术语"></a>Jmeter常见术语</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019101615572.png" alt="image-20221019101615572" title="">                </div>                <div class="image-caption">image-20221019101615572</div>            </figure><h2 id="jmeter-运行原理"><a href="#jmeter-运行原理" class="headerlink" title="jmeter 运行原理"></a>jmeter 运行原理</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019101727280.png" alt="image-20221019101727280" title="">                </div>                <div class="image-caption">image-20221019101727280</div>            </figure><h2 id="jmeter-目录结构"><a href="#jmeter-目录结构" class="headerlink" title="jmeter 目录结构"></a>jmeter 目录结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019101902521.png" alt="image-20221019101902521" title="">                </div>                <div class="image-caption">image-20221019101902521</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019101937467.png" alt="image-20221019101937467" title="">                </div>                <div class="image-caption">image-20221019101937467</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019102109365.png" alt="image-20221019102109365" title="">                </div>                <div class="image-caption">image-20221019102109365</div>            </figure><h2 id="Jmeter测试元件"><a href="#Jmeter测试元件" class="headerlink" title="Jmeter测试元件"></a>Jmeter测试元件</h2><div class="markmap-container" style="height:undefined">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;线程组&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;总控制器，控制脚本的执行&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;控制器&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;采样器 控制请求&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;默认配置与元件&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;监听器&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;逻辑控制器，控制采样器&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;仅一次控制器&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;交替循环测试（每次循环有序交替  ）&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;http请求默认值&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;避免多次填写&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[16,17]},&quot;v&quot;:&quot;http ck管理器&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:5,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;http无状态，ck记录状态&quot;}]}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;监听器&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;图形结果&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[22,23]},&quot;v&quot;:&quot;查看结果数&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[23,24]},&quot;v&quot;:&quot;可导出&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[25,26]},&quot;v&quot;:&quot;定时器&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[27,28]},&quot;v&quot;:&quot;影响作用域内的采样器&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[29,30]},&quot;v&quot;:&quot;断言&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[31,32]},&quot;v&quot;:&quot;对作用域中的所有采样器起作用&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[32,33]},&quot;v&quot;:&quot;可设置为子项&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[34,35]},&quot;v&quot;:&quot;配置元件&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[36,37]},&quot;v&quot;:&quot;与采样器相关&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[37,38]},&quot;v&quot;:&quot;可以添加或者修改请求&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[38,39]},&quot;v&quot;:&quot;仅对所在测试树分支有效&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[39,40]},&quot;v&quot;:&quot;元件用户定义的变量，开始时初始化，与位置无关&quot;}]}],&quot;p&quot;:{}}"></svg></div><h2 id="jmeter的工作区"><a href="#jmeter的工作区" class="headerlink" title="jmeter的工作区"></a>jmeter的工作区</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019105232197.png" alt="image-20221019105232197" title="">                </div>                <div class="image-caption">image-20221019105232197</div>            </figure><ul><li><p>区域①是一个目录树，存放测试设计过程中使用到的元件；执行过程中默认从根节点开始顺序遍历树上的元件。</p></li><li><p>区域②是测试计划编辑区域，在”用户定义的变量”区域，我们可以定义整个测试计划公用的全局变量，这些变量对多个线程组有效。我们还可以对线程组的运行进行设置：比如”独立运行每个线程组”、“Run tearDown Thread Groups after shutdown of main threads”</p><ul><li>测试计划：是JMeter测试脚本根节点，每一个测试脚本都是一个测试计划。</li><li>名称：可以随意设置，最好有业务意义。</li><li>注释：可以随意设置，可以为空。</li><li>用户定义的变量：全局变量</li><li>独立运行每个线程组：如果一个测试计划中有多个线程组，设置此项可以生效。不设置时每个线程组同时运行。</li><li>Run tearDown Thread Groups after shutdown of main threads:关闭主线程后运行tearDown程序来正<br>常关闭线程组（运行的线程本次迭代完成后关闭）。</li><li>函数测试模式：在调试脚本的过程中，如果需要获取服务器返回的详细信息就可以选择此项：选择此项后，如果记录较多的数据会影响测试效率，所以在执行性能测试时，最好关闭此项。</li><li>Add directory or jar to classpath:把测试需要依赖的jar包或包所在的目录加入类路径。测试需要依赖的jar包还可以直接放到%JMETER HOME%Iib目录下。(%JMETER HOME%:JMeter安装目录</li></ul></li><li><p>区域③是菜单栏，图标是菜单快捷方式。</p></li></ul><h2 id="jmeter作用域规则"><a href="#jmeter作用域规则" class="headerlink" title="jmeter作用域规则"></a>jmeter作用域规则</h2><ul><li>除了逻辑控制器，其他配置元件遵循分层规则<ul><li>父采样器 仅对父生效</li><li>父逻辑控制器 对逻辑控制器下采样器生效</li></ul></li></ul><h2 id="jmeter执行顺序"><a href="#jmeter执行顺序" class="headerlink" title="jmeter执行顺序"></a>jmeter执行顺序</h2><ul><li>0、 配置元件(Config Element)　</li><li>1、前置处理器(Pre Processors)　</li><li>2、定时器(Timer)　</li><li>3、取样器(Sampler)　</li><li>4、后置处理器(Post Processors)　</li><li>5、断言(Assertions)　</li><li>6、监听器(Listener)</li></ul><p>注意，只有取样器结果不为空的情况下才会执行4、5、6</p><p>一个简单的例子：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="v2-44add8ca1850a283ceaf9e8ac73b2a16_1440w.jpg" alt="img](v2-8c717db24ab9258895cf8fe083cb4c68_1440w.jpg)![img" title="">                </div>                <div class="image-caption">img](v2-8c717db24ab9258895cf8fe083cb4c68_1440w.jpg)![img</div>            </figure><h2 id="jmeter脚本添加"><a href="#jmeter脚本添加" class="headerlink" title="jmeter脚本添加"></a>jmeter脚本添加</h2><ul><li>根节点测试计划&#x3D;场景</li><li>测试计划中至少需要线程组 &#x3D; group</li><li>取样器 模拟用户请求</li><li>监听器 衡量系统性能</li></ul><h3 id="添加http请求"><a href="#添加http请求" class="headerlink" title="添加http请求"></a>添加http请求</h3><ul><li><p>方法：HTTP清求的方法，最常用的有GET和POST。</p></li><li><p>路径：除去主机地址部分的访问链接。</p></li><li><p>Content encoding:字符编码格式，默认iso8859,大多数应用会指定成UTF-8格式。</p></li><li><p>自动重定向：HttpClient接收到请求后，如果请求中包含重定向请求，HttpClient是可以自动跳转的，但是只针对GET与HEAD请求，勾选此项则“跟随重定向”失效：自动重定向可以自动转向到最终目标页面，但是JMeter是不记录重定向过程内容的，比如在查看结果树中是无O法找到重定向过程内容的(A重定向到B,此时只记录B的内容不记录A的内容，A的响应内容暂且叫做过程内容)，如果此时要做关联，那就比较遗憾了，无法关联到。</p><ul><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019112922675.png" alt="image-20221019112922675" title="">                </div>                <div class="image-caption">image-20221019112922675</div>            </figure></li><li>返回的状态码为 302 并且跟随一个 链接，自动请求 然后跳转</li><li>302便是过程</li></ul></li><li><p>跟随重定向：HTTP请求的默认选项，当响应Code是3xx时（比如301是重定向），自动跳转到目标地址。与自动重定向不同，JMeter会记录重定向过程中的所有请求响应，在查看结果树时可以看到服务器返回的内容，所以可以对响应的内容做关联。</p></li><li><p>Use KeepAlive:对应HTTP响应头中的Connection:Keep-Alive,默认选中。</p></li><li><p>Use multipart&#x2F;form-data for POST:当发送HTTP POST请求时，使用Use multipart&#x2F;form-data方法发送，比如我们可以用它做文件上传：这个属性是与方法POST绑定的。（提交文件时需要用到）</p></li><li><p>Browser-compatible headers:浏览器兼容模式，如果使用Use multipart&#x2F;form-data for POST建议勾选此项。</p></li><li><p>Parameters:同请求一起发送的参数，可以把要发送的参数（就是表单域）与值填到此域GET方法也适用</p></li><li><p>Body Data：指的是实体数据，就是请求报文里面主体实体的内容，一般向服务器发送请求携带的实体主体参数，可以写入这里。Parameters和Body Data只能同时使用其中一种方式。</p></li><li><p>Files Upload:当使用Use multipart&#x2F;.form-data for POST时可以在此一同上传文件。MIME类型有STRICT、BROWSER COMPATIBLE、RFC6532等.</p></li></ul><h3 id="添加查看结果树"><a href="#添加查看结果树" class="headerlink" title="添加查看结果树"></a>添加查看结果树</h3><ul><li>可以查看每次请求的服务器返回信息，运行时耗费资源，在性能测试的时候通常用于调试，运行时会关闭</li></ul><h3 id="为取样器添加content—type（消息体数据）"><a href="#为取样器添加content—type（消息体数据）" class="headerlink" title="为取样器添加content—type（消息体数据）"></a>为取样器添加content—type（消息体数据）</h3><p>采用body形式添加取样器的时候需要在取样器下面添加配置元件 信息头管理器，将content-type添加进去</p><h3 id="请求中有添加附件"><a href="#请求中有添加附件" class="headerlink" title="请求中有添加附件"></a>请求中有添加附件</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019144016498.png" alt="image-20221019144016498" title="">                </div>                <div class="image-caption">image-20221019144016498</div>            </figure><div class="markmap-container" style="height:undefined">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;注意post请求&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;不用管boundary边界&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;name 和 信息最重要&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;添加文件要在文件上传选项中&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;文件要写绝对路径、在bin目录中&quot;}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;MIME描述文件、字节流的性质和格式&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;请求信息里面有mime的信息&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;text/plain 表示文本文件的默认值&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;application/octet-stream 其他所有情况&quot;}]}],&quot;p&quot;:{}}"></svg></div><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019151506742.png" alt="image-20221019151506742" title="">                </div>                <div class="image-caption">image-20221019151506742</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019144432892.png" alt="image-20221019144432892" title="">                </div>                <div class="image-caption">image-20221019144432892</div>            </figure><h3 id="添加思考时间"><a href="#添加思考时间" class="headerlink" title="添加思考时间"></a>添加思考时间</h3><p>请求之间的思考间隔</p><div class="markmap-container" style="height:undefined">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;固定定时器&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;高斯随机定时器&quot;}],&quot;p&quot;:{}}"></svg></div><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019154358403.png" alt="image-20221019154358403" title="">                </div>                <div class="image-caption">image-20221019154358403</div>            </figure><h3 id="添加检查点"><a href="#添加检查点" class="headerlink" title="添加检查点"></a>添加检查点</h3><ul><li>Apply to main（父）sub（子）<ul><li>看查找内容的需求</li></ul></li><li>响应字段</li><li>模式匹配规则<ul><li>包括（支持）</li><li>匹配-完全匹配-不敏感-支持</li><li>相等-完全相等-敏感-不支持</li><li>字符串-在响应中能找到即可-敏感-不支持</li><li>否-取反</li><li>或者-多个模式有一个为成功就是成功</li></ul></li></ul><h3 id="添加事务"><a href="#添加事务" class="headerlink" title="添加事务"></a>添加事务</h3><p>性能测试的核心，一系列的操作</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019171505731.png" alt="image-20221019171505731" title="">                </div>                <div class="image-caption">image-20221019171505731</div>            </figure><ul><li>第一个选项，会把登录事务看做成一个采样器输出在查看结果树中</li><li>第二个选择，把时间等待和前置处理器的时间也算上</li></ul><h3 id="添加集合点"><a href="#添加集合点" class="headerlink" title="添加集合点"></a>添加集合点</h3><p>用于模拟很多人一起提交的场景</p><p> <img src="/image-20221019172539409.png" alt="image-20221019172539409"></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019172851546.png" alt="image-20221019172851546" title="">                </div>                <div class="image-caption">image-20221019172851546</div>            </figure><p>模拟用户组的数量：一次性释放的线程数，为0时&#x3D;线程组的线程数</p><p>超时时间：设置等待的时间，0&#x3D;一致等待</p><p>注意，若设置的用户组数量&gt;当前线程数，等待时间为0会一直等待下去</p><h2 id="设置脚本参数化"><a href="#设置脚本参数化" class="headerlink" title="设置脚本参数化"></a>设置脚本参数化</h2><h3 id="jmeter-csv数据文件设置"><a href="#jmeter-csv数据文件设置" class="headerlink" title="jmeter csv数据文件设置"></a>jmeter csv数据文件设置</h3><p>属于 配置元件</p><img src="/image-20221019173742325.png" alt="image-20221019173742325" style="zoom: 67%;" /><div class="markmap-container" style="height:undefined">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;名称 注释 随意&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;文件名：引用文件的地址（相对和绝对）&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;文件编码：utf-8&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;变量名称： 一一对应，名称多无值，名称少值没用到&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;忽略首行：只有填写变量名称后，才使用。如果变量名称为空：第一行必须包含标题&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;分隔符：\\t = tab ，默认为英文逗号&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;是否允许带引号：会带上分割符&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;设置CSV数据文件：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,11]},&quot;v&quot;:&quot;遇到文件结束符再次循环：是非选项，是，参数文件循环遍历；否，参数文件遍历完成后不&lt;br&gt;\n循环(JMeter在测试执行过程中每次迭代会从参数文件中新取一行数据，从头遍历到尾)。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[11,13]},&quot;v&quot;:&quot;遇到文件结束符停止线程：与“遇到文件结束符再次循环”选项中的Fse选择复用：是，&lt;br&gt;\n停止测试；否，不停止测试。&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;当&amp;quot;遇到文件结束符再次循环”选择True时，“遇到文件结束符停止线程”选择True和False无任何意义，通俗的讲，在前面控制了不停的循环读取，后面再来让stop或run没有任何意义。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;当“遇到文件结束符再次循环”选择Falsel时，“遇到文件结束符停止线程”选择True,线程4个，参数3个，那么只会请求3次。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:6,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;当“遇到文件结束符再次循环”选择Falsel时，“遇到文件结束符停止线程”选择False,线程4个，参数3个，那么会请求4次，但第4次没有参数可取，不让循环，所以第4次请求错误。&quot;}]}]},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;设置CSV数据文件：&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[18,19]},&quot;v&quot;:&quot;线程共享模式：参数文件共享模式，有以下三种：&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;所有线程：参数文件对所有线程共享，这就包括同一测试计划中的不同线程组。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[20,21]},&quot;v&quot;:&quot;当前线程组：只对当前线程组中的线程共享。&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[21,22]},&quot;v&quot;:&quot;当前线程：仅当前线程获取。&quot;}]}],&quot;p&quot;:{}}"></svg></div><h3 id="使用csv数据文件"><a href="#使用csv数据文件" class="headerlink" title="使用csv数据文件"></a>使用csv数据文件</h3><p>${变量名称}</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019175257266.png" alt="image-20221019175257266" title="">                </div>                <div class="image-caption">image-20221019175257266</div>            </figure><h3 id="查看参数取值情况"><a href="#查看参数取值情况" class="headerlink" title="查看参数取值情况"></a>查看参数取值情况</h3><p>在查看结果树前，添加调试取样器</p><h3 id="jmeter函数-CSVREAD"><a href="#jmeter函数-CSVREAD" class="headerlink" title="jmeter函数 CSVREAD"></a>jmeter函数 CSVREAD</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221019180134384.png" alt="image-20221019180134384" title="">                </div>                <div class="image-caption">image-20221019180134384</div>            </figure><ul><li>应该严格区分大小写</li><li>*alias特性可打开同一个文件</li><li>每个线程读取的行数都不同，除非线程数大于行数</li><li>使用scvread.delimiter可以切换分隔符</li><li>CSV file to get values from|*alias: CSV文件取值路径，这里填写需要参数化的参数的文件路径。</li><li>CSV文件列号引next|*aias: 文件起始列号：CSV文件列号是从0开始的，第一列为0，第二列为1，依次类推。</li></ul><p>注意: 调试取样器中看不到函数的值，只能看到变量的值</p><h3 id="jmetee-函数，-Random"><a href="#jmetee-函数，-Random" class="headerlink" title="jmetee 函数，__Random"></a>jmetee 函数，__Random</h3><p>返回指定最大值和最小值之间的随机数</p><h2 id="Fiddler恢复默认设置布局"><a href="#Fiddler恢复默认设置布局" class="headerlink" title="Fiddler恢复默认设置布局"></a>Fiddler恢复默认设置布局</h2><p>1.启动fiddler时，按住shift不放，弹出确认恢复默认设置的弹窗，点击是即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="1225550-20180614193300665-1272909593.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>阻塞线程，直到线程被阻塞到多少个后，一起释放</p>]]></content>
    
    
    <summary type="html">持续更新帖子 最近更新日期（2022年10月19日）,去做单元测试了，这个先搁置一下</summary>
    
    
    
    <category term="软件测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    <category term="性能测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    <category term="性能测试" scheme="http://example.com/tags/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>java环境变量配置</title>
    <link href="http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
    <id>http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/</id>
    <published>2022-10-18T04:53:44.000Z</published>
    <updated>2022-10-18T04:57:17.269Z</updated>
    
    <content type="html"><![CDATA[<p>配置不好CLASSPATH也会找不到java命令</p><p>14之后的只需要弄.;%JAVA_HOME%lib 就可以了</p>]]></content>
    
    
    <summary type="html">java14的CLASSPATH</summary>
    
    
    
    <category term="软件测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>软件测试导图</title>
    <link href="http://example.com/2022/10/18/map/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2022/10/18/map/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</id>
    <published>2022-10-18T03:01:48.000Z</published>
    <updated>2022-10-18T23:33:55.285Z</updated>
    
    <content type="html"><![CDATA[<div class="markmap-container" style="height:undefined">  <svg data="{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[0,1]},&quot;v&quot;:&quot;软件测试&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;性能测试&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;2022年10月9日拉练题目，基本流程&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;2022年10月10日题目内容复习&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;编写测试用例&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;编写测试用例的套路 写到资产分类 2022年10月14日&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;单元测试&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[13,14]},&quot;v&quot;:&quot;junit 和 eclipse的常规使用 2022年10月12日&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;junit的异常超时测试，几种注解理解，assert方法&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[15,16]},&quot;v&quot;:&quot;测试数据的几种覆盖方法  2022年10月13日&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:2,&quot;p&quot;:{&quot;lines&quot;:[17,18]},&quot;v&quot;:&quot;环境搭建&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:4,&quot;p&quot;:{&quot;lines&quot;:[19,20]},&quot;v&quot;:&quot;mysql5.7的安装 2022年10月12日&quot;}]}]}"></svg></div>]]></content>
    
    
    <summary type="html">软件测试的map</summary>
    
    
    
    <category term="map" scheme="http://example.com/categories/map/"/>
    
    
    <category term="map" scheme="http://example.com/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>在HEXO中插入思维导图</title>
    <link href="http://example.com/2022/10/18/hexo/%E5%9C%A8HEXO%E4%B8%AD%E6%8F%92%E5%85%A5%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    <id>http://example.com/2022/10/18/hexo/%E5%9C%A8HEXO%E4%B8%AD%E6%8F%92%E5%85%A5%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</id>
    <published>2022-10-18T02:56:39.000Z</published>
    <updated>2022-10-18T03:46:56.734Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/MaxChang3/hexo-markmap">markmap</a></p><h2 id="无权限，安装报错"><a href="#无权限，安装报错" class="headerlink" title="无权限，安装报错"></a>无权限，安装报错</h2><p>使用管理员打开cmd</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>[掘金文档内容](<a href="https://juejin.cn/post/7064473224049852453">Markmap 让你几行代码生成一个思维导图 - 掘金 (juejin.cn)</a>)</p>]]></content>
    
    
    <summary type="html">使用markmap</summary>
    
    
    
    <category term="HEXO" scheme="http://example.com/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="http://example.com/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>白盒和性能测试</title>
    <link href="http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%92%8C%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/"/>
    <id>http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E5%92%8C%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95/</id>
    <published>2022-10-18T02:46:02.000Z</published>
    <updated>2022-10-18T03:55:51.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分页的写法"><a href="#分页的写法" class="headerlink" title="分页的写法"></a>分页的写法</h2><div class="markmap-container" style="height:400px">  <svg data="{&quot;t&quot;:&quot;root&quot;,&quot;d&quot;:0,&quot;v&quot;:&quot;&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[1,2]},&quot;v&quot;:&quot;首先 显示（2）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[2,3]},&quot;v&quot;:&quot;小于10&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[3,4]},&quot;v&quot;:&quot;大于10&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[4,5]},&quot;v&quot;:&quot;之后 位于首末页按钮显示（2）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[5,6]},&quot;v&quot;:&quot;位于首页&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[6,7]},&quot;v&quot;:&quot;位于末页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[7,8]},&quot;v&quot;:&quot;然后 跳转（5）&quot;,&quot;c&quot;:[{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[8,9]},&quot;v&quot;:&quot;页码&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[9,10]},&quot;v&quot;:&quot;首页&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[10,11]},&quot;v&quot;:&quot;末页&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[11,12]},&quot;v&quot;:&quot;上一页&quot;},{&quot;t&quot;:&quot;list_item&quot;,&quot;d&quot;:3,&quot;p&quot;:{&quot;lines&quot;:[12,13]},&quot;v&quot;:&quot;下一页&quot;}]},{&quot;t&quot;:&quot;heading&quot;,&quot;d&quot;:1,&quot;p&quot;:{&quot;lines&quot;:[14,15]},&quot;v&quot;:&quot;最后 翻页查询条件保留&quot;}],&quot;p&quot;:{}}"></svg></div>]]></content>
    
    
    <summary type="html">列表分页</summary>
    
    
    
    <category term="软件测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>软件测试</title>
    <link href="http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%952022%E5%B9%B410%E6%9C%8818%E6%97%A5%E4%B9%8B%E5%89%8D/"/>
    <id>http://example.com/2022/10/18/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%952022%E5%B9%B410%E6%9C%8818%E6%97%A5%E4%B9%8B%E5%89%8D/</id>
    <published>2022-10-18T00:58:03.000Z</published>
    <updated>2022-10-18T01:17:45.425Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2022年9月27日"><a href="#2022年9月27日" class="headerlink" title="2022年9月27日"></a>2022年9月27日</h1><h2 id="招聘"><a href="#招聘" class="headerlink" title="招聘"></a>招聘</h2><h2 id="给tomcat配置环境变量"><a href="#给tomcat配置环境变量" class="headerlink" title="给tomcat配置环境变量"></a>给tomcat配置环境变量</h2><p>和mysql一样</p><h2 id="如何部署网站"><a href="#如何部署网站" class="headerlink" title="如何部署网站"></a>如何部署网站</h2><h3 id="问题没有监听8080端口"><a href="#问题没有监听8080端口" class="headerlink" title="问题没有监听8080端口"></a>问题没有监听8080端口</h3><p>原因是，JAVA_HOME路径配置错误</p><p>错误可以从 tomcat路径下面的 logs&#x2F;cataline.out 查看 命令用cat命令</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927111917988.png" alt="image-20220927111917988" title="">                </div>                <div class="image-caption">image-20220927111917988</div>            </figure><p>查看自己访问的端口号</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927111947640.png" alt="image-20220927111947640" title="">                </div>                <div class="image-caption">image-20220927111947640</div>            </figure><p>开启后的8080 是外网访问 8005 是内网 3306 数据库的</p><h3 id="步骤就是"><a href="#步骤就是" class="headerlink" title="步骤就是"></a>步骤就是</h3><p>把war包放入webapps中，然后启动tomcat 通过<code>端口号加:8080/资源名</code>访问</p><h2 id="在linux中如何导入-sql文件"><a href="#在linux中如何导入-sql文件" class="headerlink" title="在linux中如何导入.sql文件"></a>在linux中如何导入.sql文件</h2><h3 id="进入mysql中导入"><a href="#进入mysql中导入" class="headerlink" title="进入mysql中导入"></a>进入mysql中导入</h3><ol><li>首先看看。sql文件的内容中是否有创建数据库和切换数据库的代码</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927100132877.png" alt="image-20220927100132877" title="">                </div>                <div class="image-caption">image-20220927100132877</div>            </figure><ol start="2"><li><p>如果有直接就 正常登录然后使用命令</p><blockquote><p>&#x2F;&#x2F; 执行source命令,可用pwd查询sql文件路径 </p><p>source &#x2F;mysql&#x2F;file.sql  </p></blockquote></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927100627617.png" alt="image-20220927100627617" title="">                </div>                <div class="image-caption">image-20220927100627617</div>            </figure></li></ol><h3 id="使用shell命令导入，导出sql文件"><a href="#使用shell命令导入，导出sql文件" class="headerlink" title="使用shell命令导入，导出sql文件"></a>使用shell命令导入，导出sql文件</h3><p>source命令，是一行一行执行的，过慢，不适合大数据</p><ol><li><p>导出数据库</p><p>直接使用命令：</p><p><code>mysqldump -u root -p abc &gt;abc.sql</code></p><p>然后回车输入密码就可以了；</p><p><code>mysqldump -u 数据库链接用户名 -p  目标数据库 &gt; 存储的文件名</code></p><p>文件会导出到当前目录下</p></li><li><p>导入数据库（sql文件）</p><p><code>mysql -u 用户名 -p  数据库名 &lt; 数据库名.sql</code></p><p><code>mysql -u abc -p abc &lt; abc.sql</code></p><blockquote><p>这里的 数据库名 可以没有，就是上述的 sql文件中有创建数据库和切换数据库的代码</p></blockquote><p>注意sql文件必须在当前目录下，如果不在当前目录下需要在&lt; 之后加上具体sql文件路径</p></li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927101853693.png" alt="image-20220927101853693" title="">                </div>                <div class="image-caption">image-20220927101853693</div>            </figure><h2 id="在markdown文件代码块中使用linux的代码，怎么设置"><a href="#在markdown文件代码块中使用linux的代码，怎么设置" class="headerlink" title="在markdown文件代码块中使用linux的代码，怎么设置"></a>在markdown文件代码块中使用linux的代码，怎么设置</h2><p>无</p><h2 id="mysql安装步骤"><a href="#mysql安装步骤" class="headerlink" title="mysql安装步骤"></a>mysql安装步骤</h2><p>创建用户组和用户</p><p>解压安装包</p><p>设置文件权限（不赋予权限试试）</p><p>添加my.cnf配置文件</p><p>配置my.cnf文件</p><p>添加my.cnf中的使用到的文件夹</p><p>安装mysql</p><p>添加mysql到开机初始化启动项中</p><p>添加到服务中</p><p>启动mysql</p><p>修改密码</p><h3 id="chmod-和-chown-的用法和区别"><a href="#chmod-和-chown-的用法和区别" class="headerlink" title="chmod 和 chown 的用法和区别"></a>chmod 和 chown 的用法和区别</h3><p><a href="https://blog.csdn.net/weixin_39814534/article/details/87172909">chomd和chown的作用及用法区分</a></p><p>详解：</p><p><a href="https://blog.csdn.net/qq_44295125/article/details/110467460">Linux中chown和chmod的用法</a></p><ul><li>总的来说只有root用户还有文件的所有者可以该文件的对于自己和其他人的权限</li><li>为了避免文件执行时不可执行，文件读写时不可读写的问题，需要按需设置文件的权限</li></ul><h2 id="安装mysql报错FATAL-ERROR-Could-not-find-x2F-bin-x2F-my-print-defaults的解决办法"><a href="#安装mysql报错FATAL-ERROR-Could-not-find-x2F-bin-x2F-my-print-defaults的解决办法" class="headerlink" title="安装mysql报错FATAL ERROR: Could not find .&#x2F;bin&#x2F;my_print_defaults的解决办法"></a>安装mysql报错FATAL ERROR: Could not find .&#x2F;bin&#x2F;my_print_defaults的解决办法</h2><p>对mysql数据库初始化过程中，会有如下报错信息：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927195521784.png" alt="image-20220927195521784" title="">                </div>                <div class="image-caption">image-20220927195521784</div>            </figure><p>按照报错信息，去mysql安装目录的bin目下查找是否有_print_defaults，在第一列的第七行有发现这个文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927195532664.png" alt="image-20220927195532664" title="">                </div>                <div class="image-caption">image-20220927195532664</div>            </figure><p>看来其实不是没有这个文件，不是这个问题。</p><p>认真查看报错信息，可注意到那个路径是相对路径，是以mysql的安装目录为起始。</p><p>而初始化则是进去初始化脚本目录里运行脚本，而在这个目录下不会有.&#x2F;bin&#x2F;my_print_defaults的。</p><p><strong>所以回到安装目录以相对路径去执行初始化脚本</strong>。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220927195543703.png" alt="image-20220927195543703" title="">                </div>                <div class="image-caption">image-20220927195543703</div>            </figure><p>OK！初始化成功</p><h1 id="2022年9月28日"><a href="#2022年9月28日" class="headerlink" title="2022年9月28日"></a>2022年9月28日</h1><h2 id="为什么有的时候tomcat的war包会自动解压，有时候又不会"><a href="#为什么有的时候tomcat的war包会自动解压，有时候又不会" class="headerlink" title="为什么有的时候tomcat的war包会自动解压，有时候又不会"></a>为什么有的时候tomcat的war包会自动解压，有时候又不会</h2><p>我试过重新启动tomcat但是依然不行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220928100430760.png" alt="image-20220928100430760" title="">                </div>                <div class="image-caption">image-20220928100430760</div>            </figure><ol><li><p>检查配置文件</p><ul><li>在conf&#x2F;server.xml 中</li></ul><p><img src="/image-20220928101240006.png" alt="image-20220928101240006"></p><ul><li><p>unpackWARs：自动解压</p></li><li><p>AutoDeploy：服务器不需要重启就可以解压</p></li></ul></li><li><p>权限问题，当前用户是否有创建文件夹的权限</p><ul><li>切换到root用户</li></ul></li></ol><p>总结： 是我传成sql文件了，本来是可以自动解压的。。。。。。。。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220928101700460.png" alt="image-20220928101700460" title="">                </div>                <div class="image-caption">image-20220928101700460</div>            </figure><h2 id="打开网页但是显示404"><a href="#打开网页但是显示404" class="headerlink" title="打开网页但是显示404"></a>打开网页但是显示404</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220928103812176.png" alt="image-20220928103812176" title="">                </div>                <div class="image-caption">image-20220928103812176</div>            </figure><p>配置文件是</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220928103910861.png" alt="image-20220928103910861" title="">                </div>                <div class="image-caption">image-20220928103910861</div>            </figure><p>按照配置文件弄好了，我用别的war包可以用，但是这个搜车网的还是不可用</p><p>结果： 顾润说是mysql的版本不匹配，比赛时用官方给的，是匹配的，不会出现这种问题，就不纠结了</p><h2 id="linux-如何查看当前ip地址"><a href="#linux-如何查看当前ip地址" class="headerlink" title="linux 如何查看当前ip地址"></a>linux 如何查看当前ip地址</h2><h2 id="vb启动虚拟机报错"><a href="#vb启动虚拟机报错" class="headerlink" title="vb启动虚拟机报错"></a>vb启动虚拟机报错</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lpaGFuZ1I=,size_16,color_FFFFFF,t_70.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>把网卡改成上 面一样，高级的可以不弄</p><h2 id="虚拟机没有IP地址"><a href="#虚拟机没有IP地址" class="headerlink" title="虚拟机没有IP地址"></a>虚拟机没有IP地址</h2><p><a href="https://blog.csdn.net/szw906689771/article/details/121681774">csdn</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="8984415c4616fe79f75ca4002085f885.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><ul><li><p>发现ens33 没有inet 这个属性，那么就没法通过IP地址连接虚拟机</p></li><li><p>接着来查看ens33网卡的配置：vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33 注意vi后面加空格</p><pre><code>  vi是Linux内置的文本编辑器命令 打开文件的意思</code></pre></li><li><p>从配置清单中可以发现 CentOS 7 默认是不启动网卡的（ONBOOT&#x3D;no）。</p><pre><code>  把这一项改为YES（ONBOOT=yes）</code></pre></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="20cf27f8eb67a543476a4b20fb48399d.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><ul><li><p>然后按 Esc 退出 再出入命令 :wq 再按Enter即可 （备注 :wq 是保存然后退出的意思 后面会专门讲下vi）</p></li><li><p>然后重启网络服务： sudo service network restart</p></li><li><p>然后我们再输入 ip addr 命令</p></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="7e9f6d0ed71774659cbce8f2ea6d6a4d.png" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><h2 id="MySQL-安装的-pid-和-socket问题"><a href="#MySQL-安装的-pid-和-socket问题" class="headerlink" title="MySQL 安装的 pid 和 socket问题"></a>MySQL 安装的 pid 和 socket问题</h2><h1 id="2022年9月29日"><a href="#2022年9月29日" class="headerlink" title="2022年9月29日"></a>2022年9月29日</h1><h2 id="vb网络配置"><a href="#vb网络配置" class="headerlink" title="vb网络配置"></a>vb网络配置</h2><ol><li><p>ip addr 查看没有ens33 只有enp0s3 是可以的，网卡名字不一样（10.啥的不是ip）</p></li><li><p>同样 vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-enp0s3 </p><p>把ONBOT的值改成yes</p><p>然后重启网络服务 ，sudo service network restart</p></li><li><p>若发现ONBOT已将是 yes ，2就不用再做了</p></li><li><p>（好像只用第四步） 改网络设置(高级有时也不需要改)，如图</p><pre><code>  &lt;img src=&quot;image-20220929101314107.png&quot; alt=&quot;image-20220929101314107&quot; style=&quot;zoom: 80%;&quot; /&gt;</code></pre></li></ol><blockquote><p>有时候新建的虚拟机不能用桥接打开，报网络错误</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20220929131136973.png" alt="image-20220929131136973" title="">                </div>                <div class="image-caption">image-20220929131136973</div>            </figure><p>把地址改成第一个，这个进去后，之后再改回来就可以了</p></blockquote><h2 id="子类覆写后调用再调用的规则"><a href="#子类覆写后调用再调用的规则" class="headerlink" title="子类覆写后调用再调用的规则"></a>子类覆写后调用再调用的规则</h2><ul><li>子类在初始化时，父类会先于子类初始化，而父类构造器中调用的方法又是子类覆写的方法，从而<strong>导致了父类在初始化过程中使用了错误的子类初始化数据</strong></li></ul><h2 id="了解自己的思维"><a href="#了解自己的思维" class="headerlink" title="了解自己的思维"></a>了解自己的思维</h2><p>一些自己思维的常识与代码逻辑有相通之处</p><h1 id="2022年10月11日"><a href="#2022年10月11日" class="headerlink" title="2022年10月11日"></a>2022年10月11日</h1><h2 id="坚果云升级账号"><a href="#坚果云升级账号" class="headerlink" title="坚果云升级账号"></a>坚果云升级账号</h2><p>升级账号 :no_good_man:大咩</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="image-20221011093646856.png" alt="image-20221011093646856" title="">                </div>                <div class="image-caption">image-20221011093646856</div>            </figure><p>首先，免费版没有空间限制，但是每个月可以上传1G</p><p>假设免费版用到的空间为8G</p><p>专业版开年费有30G的空间，每月增加1G（只有年费才有），也就是42G（12个月后）</p><p>专业版年费到期后，空间为免费版用到的流量，加上每月扩容的流量，也就是8+12 </p><p>那么，多余的问价你要么删除，要么继续开通，要么在会员到期之前，全部下载下来</p><p>所以，用它来同步照片，同步大文件啥的，不合适，有百度网盘，就可以，坚果云毕竟是同步盘</p><p>总的来说，像这样，写博客，偶尔粘贴几个图片，用到office办公，文件共享之类的，每月1g，免费的同步，企业级的数据安全（比自己的nas用的硬盘好一点，我的垃圾硬盘，哈哈），我能用到天荒地老:joy:</p><h2 id="写测试用例"><a href="#写测试用例" class="headerlink" title="写测试用例"></a>写测试用例</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="2022年10月12日.png" alt="2022年10月12日" title="">                </div>                <div class="image-caption">2022年10月12日</div>            </figure>]]></content>
    
    
    <summary type="html">2022年10月18日 对之前的汇总</summary>
    
    
    
    <category term="软件测试" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="软件测试" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo的安装和安装遇到的问题</title>
    <link href="http://example.com/2022/10/17/hexo/hexo%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%AE%89%E8%A3%85%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/10/17/hexo/hexo%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E5%AE%89%E8%A3%85%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-10-17T11:50:10.000Z</published>
    <updated>2022-10-18T02:48:03.605Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-主题官方使用文档"><a href="#hexo-主题官方使用文档" class="headerlink" title="hexo 主题官方使用文档"></a>hexo 主题官方使用文档</h2><p><a href="https://www.haomwei.com/technology/maupassant-hexo.html">大道至简——Hexo简洁主题推荐 | 屠·城 (haomwei.com)</a></p><h2 id="修改npm源"><a href="#修改npm源" class="headerlink" title="修改npm源"></a>修改npm源</h2><p>\1. W+R打开搜索，输入<a href="https://so.csdn.net/so/search?q=cmd&spm=1001.2101.3001.7020">cmd</a>，打开终端面板。</p><p>\2. 输入以下命令：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> registry https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>\3. 检查是否修改成功：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">get</span> registry</span><br></pre></td></tr></table></figure><p>\4. 如果输出以下内容即为修改成功：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>\5. 如果未修改成功重复3、4步骤即可。</p><h2 id="解决-hexo-renderer-sass-无法安装"><a href="#解决-hexo-renderer-sass-无法安装" class="headerlink" title="解决 hexo-renderer-sass 无法安装"></a>解决 hexo-renderer-sass 无法安装</h2><p>大概是这插件太老了，已不适用 <code>node -v v16.15.0</code> ，<code>node 12</code> 大概是同时代版本，可自行尝试。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>这插件网上一堆错误，开发者根本也不管了，好在还有其他替代方案，适用有人更新的替代版本 <code>hexo-renderer-sass-next</code> ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-sass</span><br><span class="line">npm i --save hexo-renderer-sass-next</span><br></pre></td></tr></table></figure><p>换插件后，根本不存在网络问题，node、python 版本问题，测试下依赖 <code>node-sass</code> 的主题，一切都这么丝滑。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><ol><li><a href="https://sobaigu.com/Hexo-git-to-vps.html">开始新的折腾，Hexo博客Git-VPS部署完整记录</a></li><li><a href="http://www.edulinks.cn/2021/07/27/20210727-node-sass-problem/">node-sass安装遇到的错误</a></li><li><a href="https://www.npmjs.com/package/hexo-renderer-sass-next">hexo-renderer-sass-next</a></li></ol><h2 id="hexo-的图片显示问题"><a href="#hexo-的图片显示问题" class="headerlink" title="hexo 的图片显示问题"></a>hexo 的图片显示问题</h2><p>因为要发到github托管 所以使用相对路径</p><p>众所周知，在md中插入图片的语法为<code>i[]()</code></p><p>其中<code>方括号</code>时图片的描述，<code>圆括号</code>为图片的路径。</p><p>使用typore复制到本地时候，图片会自动变为<code>![](文章名/image.jpg)</code></p><img src="image-20221017223915291.png" alt="image-20221017223915291" style="zoom: 67%;" /><p>使用这个配置之后，复制到文章中的图片就会自动变成<code>![](文章名/image.jpg)</code></p><h3 id="hexo设置"><a href="#hexo设置" class="headerlink" title="hexo设置"></a>hexo设置</h3><p>由于我们的博客是要部署在网站上，部署后会生成新的文件目录，所以我们选择使用相对路径的方式。</p><p>在hexo中使用<strong>文章资源文件夹</strong>需要在<code>config.yaml</code>文件中更改一下配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>当该配置被应用后，使用<code>hexo new</code>命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</p><blockquote><p>由于项目会生成新的文件目录，同时会解析Markdown中的图片路径，会导致一个问题。<br>如在一个文件目录下，博客名为<code>1.md</code>，相应的存在一个<code>1</code>文件夹存放图片<code>image.jpg</code>。<br>在Typora编辑器中，普通的md文件使用<code>![](1/image.jpg)</code>能在编辑器中正常显示图片。<br>在hexo中，按理说应该是使用<code>![](image.jpg)</code>，但网页中却无法正常显示。<br>此时应该使用这样的方式来引入图片：</p></blockquote><h3 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h3><p>插件<a href="https://link.zhihu.com/?target=https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>之后就可以在使用<code>![](image.jpg)</code>的方式愉快的插入图片了。</p><p>我们做了这么多都是为了方便，那么为什么不再方便一点呢。</p><h3 id="图片插件和typora结合"><a href="#图片插件和typora结合" class="headerlink" title="图片插件和typora结合"></a>图片插件和typora结合</h3><p>但我们知道部署后，文件路径是不同的，所以当我们插入完所有的图片后，我们还需要删除每个图片路径中的<code>文件名/</code>。不慌，也很简单。</p><p>在Typora编辑器中，使用<code>&lt;C-f&gt;</code>快捷键，将所有的<code>文章名/</code>替换为空即可删除</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="v2-9202796d27f4659d96ff13b11e6808c1_r.jpg" alt="img" title="">                </div>                <div class="image-caption">img</div>            </figure><p>————-本地预览不显示图片的问题—————-</p><p>在typora的设置中选择图片工具，为文章设置一个图片根目录。设置方式如下，之后选中存放图片的目录即可，根据不同版本的typora该设置项可以能在不能的位置。</p><img src="/v2-8d28ac51aedad913907c45b4907d325f_r.jpg" alt="img" style="zoom:67%;" /><h3 id="图片可以本地预览"><a href="#图片可以本地预览" class="headerlink" title="图片可以本地预览"></a>图片可以本地预览</h3><p>为了方便，可以在<code>scaffolds -&gt; post</code>中添加如下设置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">typora-root-url:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br></pre></td></tr></table></figure><p>这样每次执行hexo new命令新建文章的时候，会在Front Matter中自动添加该配置，如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">typora-root-url: hexo图片显示问题</span><br></pre></td></tr></table></figure><p>至此，在本地和服务器的图片都能正常预览。</p><h2 id="categories和tags标签设置"><a href="#categories和tags标签设置" class="headerlink" title="categories和tags标签设置"></a>categories和tags标签设置</h2><p>可以在<code>scaffolds -&gt; post</code>中添加如下设置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="string">tags：</span></span><br></pre></td></tr></table></figure><h3 id="给文章添加tags属性"><a href="#给文章添加tags属性" class="headerlink" title="给文章添加tags属性"></a>给文章添加tags属性</h3><p>打开需要添加标签的文章，为其添加tags属性。下方的<code>tags:</code>下方的<code>- jQuery</code> <code>- 表格</code><br><code>- 表单验证</code>就是这篇文章的标签了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: jQuery对表单的操作及更多应用</span><br><span class="line">date: <span class="number">2017</span>-<span class="number">05</span>-<span class="number">26</span> <span class="number">12</span>:<span class="number">12</span>:<span class="number">57</span></span><br><span class="line">categories: </span><br><span class="line">- web前端</span><br><span class="line">tags:</span><br><span class="line">- jQuery</span><br><span class="line">- 表格</span><br><span class="line">- 表单验证</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了<code>tags: xxx</code>的文章才会被收录到首页的“标签”中。</p><h3 id="给文章添加categories属性"><a href="#给文章添加categories属性" class="headerlink" title="给文章添加categories属性"></a>给文章添加categories属性</h3><p>打开需要添加分类的文章，为其添加categories属性。下方的<code>categories: web前端</code>表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: jQuery对表单的操作及更多应用</span><br><span class="line">date: <span class="number">2017</span>-<span class="number">05</span>-<span class="number">26</span> <span class="number">12</span>:<span class="number">12</span>:<span class="number">57</span></span><br><span class="line">categories: </span><br><span class="line">- web前端</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了<code>categories: xxx</code>的文章才会被收录到首页的“分类”中。</p><h2 id="HELLO-WORD-文档"><a href="#HELLO-WORD-文档" class="headerlink" title="HELLO WORD 文档"></a>HELLO WORD 文档</h2><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: [Deployment](</p>]]></content>
    
    
    <summary type="html">第一次安装HEXO</summary>
    
    
    
    <category term="HEXO" scheme="http://example.com/categories/HEXO/"/>
    
    
    <category term="HEXO" scheme="http://example.com/tags/HEXO/"/>
    
  </entry>
  
</feed>
